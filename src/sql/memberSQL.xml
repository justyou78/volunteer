<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->

<mapper namespace="member">
	
	
	<insert id="insertVolMember"  parameterType="memberVO">
		insert into member(id, name,picture) values(#{id}, #{name}, #{picture})
	</insert>
	<update id="updateVolMember" parameterType="memberVO">
		update  member set name=#{name}, picture=#{picture} where id = #{id}
	</update>
	
	<update id="updateVol" parameterType="memberVO">
		update member set  pw=#{pw},callnumber=#{callnumber}, member_type=#{member_type},email=#{email} ,age=#{age},gender=#{gender} , address=#{address}, vol_name=#{vol_name} , regist_number=#{regist_number} where id = #{id}
	</update>
	<update id="updateDisabled" parameterType="memberVO">
		update member set pw=#{pw},callnumber=#{callnumber}, member_type=#{member_type},email=#{email} ,age=#{age},gender=#{gender} , address=#{address}, disabled_name=#{disabled_name} , disabled_number=#{disabled_number} where id = #{id}
	</update>
	
	<select id="selectID" parameterType="String"  resultType="String">
		select id from member where id=#{id}
	</select>
	
	<select id="getName" parameterType="String"  resultType="String">
		select name from member where id = #{id}
	</select>
	<!-- <select id="checkPw" resultType="int">
		select count(*) from member
		where userid=#{userid} and passwd = #{passwd}
		
	</select> -->
	<select id="selectAll" parameterType="String" resultType="memberVO">
		select * from member where id = #{id}
	</select>
	<update id="updateInfo" parameterType="memberVO" >
		update member set pw=#{pw}, callnumber=#{callnumber} email=#{email}, age=#{age}, gender=#{gender}, address=#{address}, vol_name=#{vol_name}, regist_number=#{regist_number} where id=#{id} 
	</update>
	<update id="disabledInfo" parameterType="memberVO" >
		update member set pw=#{pw}, callnumber=#{callnumber}, email=#{email}, age=#{age}, gender=#{gender}, address=#{address}, disabled_name=#{disabled_name}, disabled_number=#{disabled_number} where id=#{id} 
	</update>
	
	<select id="selectVolFromAddress" parameterType="hashmap" resultType="memberVO">
		select *  from member where address like CONCAT(#{address},'%') and not id=#{id}
	</select>
	
	<select id="selectAllFromEmail" parameterType="String" resultType="memberVO">
		select *  from member where email=#{email}
	</select>
	
	<update id="updateVolTime" parameterType="listVO">
		<selectKey resultType="String" keyProperty="total_vol_time" order="BEFORE">
        SELECT total_vol_time FROM member where id=#{vol_id}        
    	</selectKey>
		update member set total_vol_time =
		<if test="total_vol_time== null">
			#{vol_time}
		</if>
		<if test="total_vol_time != null">
			total_vol_time + #{vol_time} 
		</if>
		where id =#{vol_id}
	</update>
	
	<update id="updatePoint" parameterType="hashmap">
		<selectKey resultType="String" keyProperty="point" order="BEFORE">
        SELECT point FROM member where id=#{vol_id}        
    	</selectKey>
		update member set point=
		<if test="point== null">
			#{give_star}
		</if>
		<if test="point != null">
			(#{point} +#{give_star})/2
		</if>
		where id =#{vol_id}
	</update>
	
	
	
	
	
	<select id="selectAllID" resultType="String">
		select id from member
	</select>
	
	<select id="selectAllDescTime" resultType="memberVO" >
		select total_vol_time, name,picture from (select name,total_vol_time,picture from member where not total_vol_time is null  order by total_vol_time desc) where rownum between 1 and 5
	</select>
	
</mapper>
